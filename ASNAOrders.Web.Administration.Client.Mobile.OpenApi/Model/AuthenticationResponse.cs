/* 
 * ASNAOrders.Web.Administration.Server
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = ASNAOrders.Web.Administration.Client.OpenApi.Client.SwaggerDateConverter;
namespace ASNAOrders.Web.Administration.Client.OpenApi.Model
{
    /// <summary>
    /// AuthenticationResponse
    /// </summary>
    [DataContract]
    public partial class AuthenticationResponse : IEquatable<AuthenticationResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AuthenticationResponse" /> class.
        /// </summary>
        /// <param name="result">result.</param>
        /// <param name="accessToken">accessToken.</param>
        /// <param name="information">information.</param>
        public AuthenticationResponse(bool? result = default, string accessToken = default, AuthenticationResponseErrorsInner information = default)
        {
            Result = result;
            AccessToken = accessToken;
            Information = information;
        }

        /// <summary>
        /// Gets or Sets Result
        /// </summary>
        [DataMember(Name = "result", EmitDefaultValue = false)]
        public bool? Result { get; set; }

        /// <summary>
        /// Gets or Sets AccessToken
        /// </summary>
        [DataMember(Name = "accessToken", EmitDefaultValue = false)]
        public string AccessToken { get; set; }

        /// <summary>
        /// Gets or Sets Information
        /// </summary>
        [DataMember(Name = "information", EmitDefaultValue = false)]
        public AuthenticationResponseErrorsInner Information { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AuthenticationResponse {\n");
            sb.Append("  Result: ").Append(Result).Append("\n");
            sb.Append("  AccessToken: ").Append(AccessToken).Append("\n");
            sb.Append("  Information: ").Append(Information).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return Equals(input as AuthenticationResponse);
        }

        /// <summary>
        /// Returns true if AuthenticationResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of AuthenticationResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AuthenticationResponse input)
        {
            if (input == null)
                return false;

            return
                (
                    Result == input.Result ||
                    Result != null &&
                    Result.Equals(input.Result)
                ) &&
                (
                    AccessToken == input.AccessToken ||
                    AccessToken != null &&
                    AccessToken.Equals(input.AccessToken)
                ) &&
                (
                    Information == input.Information ||
                    Information != null &&
                    Information.Equals(input.Information)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (Result != null)
                    hashCode = hashCode * 59 + Result.GetHashCode();
                if (AccessToken != null)
                    hashCode = hashCode * 59 + AccessToken.GetHashCode();
                if (Information != null)
                    hashCode = hashCode * 59 + Information.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
