// <auto-generated />
using System;
using ASNAOrders.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASNAOrders.Web.Migrations
{
    [DbContext(typeof(ASNAOrdersDbContext))]
    [Migration("20240507150111_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("ASNAOrders.Web.Data.Orders.DeliveryAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Full")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DeliveryAddrs");
                });

            modelBuilder.Entity("ASNAOrders.Web.Data.Orders.DeliveryInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ClientArrivementDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DeliveryInfos");
                });

            modelBuilder.Entity("ASNAOrders.Web.Data.Orders.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<float>("Quantity")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("ASNAOrders.Web.Data.Orders.ItemPromo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Discount")
                        .HasColumnType("TEXT");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("ItemPromos");
                });

            modelBuilder.Entity("ASNAOrders.Web.Data.Orders.Modification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Modifications");
                });

            modelBuilder.Entity("ASNAOrders.Web.Data.Orders.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<int>("DeliveryInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<string>("EatsId")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<int>("PaymentInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Persons")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("TEXT");

                    b.Property<string>("RestaurantId")
                        .HasMaxLength(48)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryInfoId");

                    b.HasIndex("PaymentInfoId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ASNAOrders.Web.Data.Orders.OrderPromo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Discount")
                        .HasColumnType("TEXT");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("OrderPromos");
                });

            modelBuilder.Entity("ASNAOrders.Web.Data.Orders.PaymentInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Change")
                        .HasColumnType("REAL");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<double>("ItemsCost")
                        .HasColumnType("REAL");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Total")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("PaymentInfos");
                });

            modelBuilder.Entity("ASNAOrders.Web.Data.Stocks.NativeStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Barcode")
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Composition")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemDesc")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemId")
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemName")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("PlaceId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("Qtty")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UploadRecordedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("NativeStocks");
                });

            modelBuilder.Entity("ASNAOrders.Web.Data.YENomenclature.Barcode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Values")
                        .HasColumnType("TEXT");

                    b.Property<string>("WeightEncoding")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Barcodes");
                });

            modelBuilder.Entity("ASNAOrders.Web.Data.YENomenclature.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("SortOrder")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ASNAOrders.Web.Data.YENomenclature.CategoryImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("TEXT");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("CategoryImages");
                });

            modelBuilder.Entity("ASNAOrders.Web.Data.YENomenclature.Description", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Composition")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("ExpiresIn")
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<string>("General")
                        .HasMaxLength(4096)
                        .HasColumnType("TEXT");

                    b.Property<string>("NutritionalValue")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PackageInfo")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Purpose")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("StorageRequirements")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("VendorCountry")
                        .HasMaxLength(80)
                        .HasColumnType("TEXT");

                    b.Property<string>("VendorName")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ItemDescs");
                });

            modelBuilder.Entity("ASNAOrders.Web.Data.YENomenclature.ItemImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OwnerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("ItemImages");
                });

            modelBuilder.Entity("ASNAOrders.Web.Data.YENomenclature.Measure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Quantum")
                        .HasColumnType("REAL");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ItemMeasures");
                });

            modelBuilder.Entity("ASNAOrders.Web.Data.YENomenclature.NomenclatureItem", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("BarcodeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<int>("DescriptionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExciseValue")
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCatchWeight")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Labels")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("MeasureId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<float?>("OldPrice")
                        .HasColumnType("REAL");

                    b.Property<float>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("SortOrder")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Vat")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<int?>("VolumeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BarcodeId");

                    b.HasIndex("DescriptionId");

                    b.HasIndex("MeasureId");

                    b.HasIndex("VolumeId");

                    b.ToTable("YENomenclatureItems");
                });

            modelBuilder.Entity("ASNAOrders.Web.Data.YENomenclature.Volume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("YandexEatsVolumes");
                });

            modelBuilder.Entity("ASNAOrders.Web.Data.Orders.Item", b =>
                {
                    b.HasOne("ASNAOrders.Web.Data.Orders.Order", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("ASNAOrders.Web.Data.Orders.ItemPromo", b =>
                {
                    b.HasOne("ASNAOrders.Web.Data.Orders.Item", "Owner")
                        .WithMany("Promos")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("ASNAOrders.Web.Data.Orders.Modification", b =>
                {
                    b.HasOne("ASNAOrders.Web.Data.Orders.Item", "Owner")
                        .WithMany("Modifications")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("ASNAOrders.Web.Data.Orders.Order", b =>
                {
                    b.HasOne("ASNAOrders.Web.Data.Orders.DeliveryInfo", "DeliveryInfo")
                        .WithMany()
                        .HasForeignKey("DeliveryInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASNAOrders.Web.Data.Orders.PaymentInfo", "PaymentInfo")
                        .WithMany()
                        .HasForeignKey("PaymentInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryInfo");

                    b.Navigation("PaymentInfo");
                });

            modelBuilder.Entity("ASNAOrders.Web.Data.Orders.OrderPromo", b =>
                {
                    b.HasOne("ASNAOrders.Web.Data.Orders.Order", "Owner")
                        .WithMany("Promos")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("ASNAOrders.Web.Data.YENomenclature.CategoryImage", b =>
                {
                    b.HasOne("ASNAOrders.Web.Data.YENomenclature.Category", "Owner")
                        .WithMany("Images")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("ASNAOrders.Web.Data.YENomenclature.ItemImage", b =>
                {
                    b.HasOne("ASNAOrders.Web.Data.YENomenclature.NomenclatureItem", "Owner")
                        .WithMany("Images")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("ASNAOrders.Web.Data.YENomenclature.NomenclatureItem", b =>
                {
                    b.HasOne("ASNAOrders.Web.Data.YENomenclature.Barcode", "Barcode")
                        .WithMany()
                        .HasForeignKey("BarcodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASNAOrders.Web.Data.YENomenclature.Description", "Description")
                        .WithMany()
                        .HasForeignKey("DescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASNAOrders.Web.Data.YENomenclature.Measure", "Measure")
                        .WithMany()
                        .HasForeignKey("MeasureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASNAOrders.Web.Data.YENomenclature.Volume", "Volume")
                        .WithMany()
                        .HasForeignKey("VolumeId");

                    b.Navigation("Barcode");

                    b.Navigation("Description");

                    b.Navigation("Measure");

                    b.Navigation("Volume");
                });

            modelBuilder.Entity("ASNAOrders.Web.Data.Orders.Item", b =>
                {
                    b.Navigation("Modifications");

                    b.Navigation("Promos");
                });

            modelBuilder.Entity("ASNAOrders.Web.Data.Orders.Order", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Promos");
                });

            modelBuilder.Entity("ASNAOrders.Web.Data.YENomenclature.Category", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("ASNAOrders.Web.Data.YENomenclature.NomenclatureItem", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
